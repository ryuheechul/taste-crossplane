# This is a workflow that is manually triggered
name: adding a serviceaccount

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'a name for new resource, in this case, for ServiceAccount'
        # Default value if no value is explicitly provided
        default: 'new value'
        # Input has to be provided for the workflow to run
        required: true
      source-branch:
        description: 'a source branch where the new branch will come from'
        default: 'main'
        required: true
      new-branch:
        description: 'new branch name'
        default: 'feature/new-sa'
        required: true
      draft:
        description: 'wether to make the PR draft or not'
        default: 'yes'
        required: true

jobs:
  add-sa:
    runs-on: ubuntu-latest
    env:
      sa_name: "${{ github.event.inputs.name }}"
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.0
      with:
        ref: '${{ github.event.inputs.source-branch }}'
    - name: Create New Branch
      run: git checkout -b '${{ github.event.inputs.new-branch }}'
    - name: build docker image to run the meat
      working-directory: .github/actions/run
      run: make build
    # unfortunately act use its own naming for the image so this is required
    # otherwise act will not build again for new updated source code when the image already exists
    - name: build docker image to run the meat
      # but only if it's running by act
      if: ${{ env.ACT }}
      working-directory: .github/actions/run
      run: make build-for-act
    - name: mkdir
      run: |
        mkdir -p kustomize/mock-cloud/serviceaccounts
    - name: add serviceaccount
      uses: ./.github/actions/run
      with:
        run: >-
          cd kustomize/mock-cloud
          &&
          ../.templates/add-sa.sh "serviceaccounts/${{ env.sa_name }}.yaml" "${{ env.sa_name }}"
    - name: kustomize build
      uses: ./.github/actions/run
      with:
        run: >-
          cd kustomize/mock-cloud
          &&
          kustomize build
    - name: commit and push
      uses: github-actions-x/commit@v2.8
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'update example.yaml'
        push-branch: '${{ github.event.inputs.new-branch }}'
        name: friendly-bot
    - name: determine draft
      id: draft-truefalse
      run: |
        result_in_truefalse="false"
        test "${{ github.event.inputs.draft }}" == "yes" && result_in_truefalse="true"

        echo -n "::set-output name=draft::"
        echo "${result_in_truefalse}"
    - name: File Pull Request
      uses: repo-sync/pull-request@master
      with:
        source_branch: '${{ github.event.inputs.new-branch }}'
        destination_branch: '${{ github.event.inputs.source-branch }}'
        github_token: ${{ secrets.GITHUB_TOKEN }}
        pr_title: "New ServiceAccount for ${{ env.sa_name }}"
        pr_body: ":crown: *An automated PR*"
        pr_draft: ${{ steps.draft-truefalse.outputs.draft }}
